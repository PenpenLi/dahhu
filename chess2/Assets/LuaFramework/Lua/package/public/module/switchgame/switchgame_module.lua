---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chenz.
--- DateTime: 2018/7/18 12:01
---
--
-- User: dred
-- Date: 2016/12/6
-- Time: 10:37
-- 文字消息提示模块

local class = require("lib.middleclass")
local ModuleBase = require("core.mvvm.module_base")

local SwitchGameModule = class("Public.SwitchGameModule", ModuleBase)

local ModuleCache = ModuleCache
local SwitchGameConfig = require("package.public.module.switchgame.switchgame_config")
function SwitchGameModule:initialize(...)
    -- 开始初始化
    ModuleBase.initialize(self, "switchgame_view", nil, ...)
end

function SwitchGameModule:on_show(intentData)
    if intentData and intentData == "chessmuseum_select_wanfa" then
        self.chessmuseumSelectWanfa = true
    else
        self.chessmuseumSelectWanfa = false
    end

    local usedPokerName = ModuleCache.PlayerPrefsManager.GetString("UsedPokerName", "")
    local usedMajongName = ModuleCache.PlayerPrefsManager.GetString("UsedMajongName", "")
    self.view:refresh_gold(self.modelData.roleData)
    --self.view:initView(usedPokerName,usedMajongName)

    self.view:init_region_list()
    self:on_click(self.view.regionItems[1].obj)
    --首次进入需要选择当前玩法页签
    local _cmd  = ModuleCache.AppData.get_real_app_and_game_name()
    local gameConfig = SwitchGameConfig.gameNameGetPointConfig(_cmd)
    if gameConfig ~= nil then
        if ModuleCache.AppData.isPokerGame(_cmd) then
            self.view:initGameList(true)
            ModuleCache.PlayerPrefsManager.SetInt("RegionSelectData_" .. gameConfig.regionName, 1)
        else
            self.view:initGameList()
            ModuleCache.PlayerPrefsManager.SetInt("RegionSelectData_" .. gameConfig.regionName, 0)     
        end
    end 

    self:get_diamond()
end

function SwitchGameModule:on_click(obj, arg)
    ModuleCache.SoundManager.play_sound("public", "public/sound/button.bytes", "button")
    local _cmd = obj.name
    if "BtnClose" == _cmd then
        ModuleCache.ModuleManager.hide_module("public", "switchgame")
    elseif "ButtonTili" == _cmd then
        ModuleCache.ModuleManager.show_module("public", "shop")
    elseif "Content" == obj.transform.parent.name then
        if _cmd == "close" then
            ModuleCache.ModuleManager.show_public_module("textprompt"):show_center_tips("即将开启！")
        else
            if self.chessmuseumSelectWanfa then
                ModuleCache.GameManager.change_game_by_gameName(_cmd, true)
                local playMode = {
                    provinceId = ModuleCache.GameManager.curProvince,
                    gameName = ModuleCache.AppData.Game_Name
                }
                self:dispatch_package_event("Event_Package_selectWanfaDone",playMode)
                self:hide()
            else
                ModuleCache.GameManager.change_game_by_gameName(_cmd)
                local package = ModuleCache.PlayModeUtil.getInfoByGameId(ModuleCache.GameManager.curGameId).package
                ModuleCache.PackageManager.update_package_version(package, function()
                    ModuleCache.ModuleManager.hide_module("public", "switchgame")
                end)
                if ModuleCache.AppData.isPokerGame(_cmd) then
                    ModuleCache.PlayerPrefsManager.SetString("UsedPokerName", _cmd)
                else
                    ModuleCache.PlayerPrefsManager.SetString("UsedMajongName", _cmd)
                end
                ModuleCache.ModuleManager.show_module("public", "hall")
                self:dispatch_package_event("Event_Set_Play_Mode", nil)
            end

        end
    elseif obj.name == "Majong" then
        self.view:initGameList()
        ModuleCache.PlayerPrefsManager.SetInt("RegionSelectData_" .. self.curRegionName, 0)
    elseif obj.name == "Poker" then
        self.view:initGameList(true)
        ModuleCache.PlayerPrefsManager.SetInt("RegionSelectData_" .. self.curRegionName, 1)
    elseif "Regions" == obj.transform.parent.name then
        self.view:refresh_region(obj)
        local pokers, majiangs = SwitchGameConfig.get_gamelist_by_regionname(_cmd)
        self.view:refresh_View(pokers, majiangs)
        local isPoker = (ModuleCache.PlayerPrefsManager.GetInt("RegionSelectData_" .. _cmd, 0) == 1)
        self.view:initGameList(isPoker)
        self.curRegionName = _cmd
    end
end

-- 绑定module层的交互事件
function SwitchGameModule:on_module_event_bind()
    --self:subscibe_package_event("Event_Set_Play_Mode", function(eventHead, eventData)
    --    if eventData then
    --        self.playMode = PlayModeUtil.getInfoByIdAndLocation(ModuleCache.GameManager.curGameId, ModuleCache.GameManager.curLocation)
    --        self:on_show()
    --    end
    --end)
    self:subscibe_package_event("Event_Package_Refresh_Userinfo", function(eventHead, eventData)
        self.view:refresh_gold(eventData)
    end)
end

function SwitchGameModule:get_diamond()
    local requestData = {
        baseUrl = ModuleCache.GameManager.netAdress.httpCurApiUrl .. "user/getAccountList?",
        showModuleNetprompt = true,
        params = {
            uid = self.modelData.roleData.userID,
            gameIds = SwitchGameConfig.gameIds()
        }
    }
    self:http_get(requestData, function(wwwData)
        local retData = wwwData.www.text
        retData = ModuleCache.Json.decode(retData)
        if (retData.success) then
            self.view:diamondNum(retData.data)
        end
    end, function(wwwErrorData)
        print(wwwErrorData.error)
    end)
end

function SwitchGameModule:on_hide(intentData)
end

return SwitchGameModule